{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\T-Gamer\\\\Documents\\\\GitHub\\\\pmoveldoacaosangue\\\\Screen\\\\RegisterScreen.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Loader from \"./Components/Loader\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userAge = _useState6[0],\n      setUserAge = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAddress = _useState8[0],\n      setUserAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userPassword = _useState10[0],\n      setUserPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errortext = _useState14[0],\n      setErrortext = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isRegistraionSuccess = _useState16[0],\n      setIsRegistraionSuccess = _useState16[1];\n\n  var nameInputRef = createRef();\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Insira seu nome, por favor.');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Insira seu email, por favor.');\n      return;\n    }\n\n    if (!userAge) {\n      alert('Insira sua idade, por favor.');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Insira seu endereço, por favor.');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Insira sua senha, por favor.');\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      user_name: userName,\n      user_email: userEmail,\n      user_age: userAge,\n      user_address: userAddress,\n      user_password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    fetch('https://aboutreact.herokuapp.com/register.php', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status == 1) {\n        setIsRegistraionSuccess(true);\n        console.log('Registrado com sucesso, faça o login para prosseguir.');\n      } else {\n        setErrortext('Registro não sucedido.');\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#FF5554',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: require(\"../Image/success.png\"),\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Registrado com sucesso.\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Fazer o login agora\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#FF5554'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, React.createElement(Loader, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Image/aboutreact.png\"),\n    style: {\n      width: '50%',\n      height: 100,\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Insira o nome\",\n    placeholderTextColor: \"#D4F1F4\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return emailInputRef.current && emailInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Insira o email\",\n    placeholderTextColor: \"#D4F1F4\",\n    keyboardType: \"email-address\",\n    ref: emailInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Insira a senha\",\n    placeholderTextColor: \"#D4F1F4\",\n    ref: passwordInputRef,\n    returnKeyType: \"next\",\n    secureTextEntry: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return ageInputRef.current && ageInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAge) {\n      return setUserAge(UserAge);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Insira a idade\",\n    placeholderTextColor: \"#D4F1F4\",\n    keyboardType: \"numeric\",\n    ref: ageInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return addressInputRef.current && addressInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAddress) {\n      return setUserAddress(UserAddress);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Insira o endere\\xE7o\",\n    placeholderTextColor: \"#D4F1F4\",\n    autoCapitalize: \"sentences\",\n    ref: addressInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \" \", errortext, \" \") : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, \"REGISTRAR\")))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#0000DC',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#0000DC',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/T-Gamer/Documents/GitHub/pmoveldoacaosangue/Screen/RegisterScreen.js"],"names":["React","useState","createRef","Loader","RegisterScreen","props","userName","setUserName","userEmail","setUserEmail","userAge","setUserAge","userAddress","setUserAddress","userPassword","setUserPassword","loading","setLoading","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","nameInputRef","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","alert","dataToSend","user_name","user_email","user_age","user_address","user_password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","then","response","json","responseJson","console","log","status","catch","error","flex","backgroundColor","justifyContent","require","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignContent","alignItems","width","margin","SectionStyle","inputStyle","UserName","current","focus","UserEmail","UserPassword","UserAge","UserAddress","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["// Import React and Component\r\nimport React, { useState, createRef } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\nimport Loader from './Components/Loader';\r\n\r\nconst RegisterScreen = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userAge, setUserAge] = useState('');\r\n  const [userAddress, setUserAddress] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [errortext, setErrortext] = useState('');\r\n  const [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\r\n\r\n  const nameInputRef = createRef();\r\n  const emailInputRef = createRef();\r\n  const ageInputRef = createRef();\r\n  const addressInputRef = createRef();\r\n  const passwordInputRef = createRef();\r\n\r\n  const handleSubmitButton = () => {\r\n    setErrortext('');\r\n    if (!userName) {\r\n      alert('Insira seu nome, por favor.');\r\n      return;\r\n    }\r\n    if (!userEmail) {\r\n      alert('Insira seu email, por favor.');\r\n      return;\r\n    }\r\n    if (!userAge) {\r\n      alert('Insira sua idade, por favor.');\r\n      return;\r\n    }\r\n    if (!userAddress) {\r\n      alert('Insira seu endereço, por favor.');\r\n      return;\r\n    }\r\n    if (!userPassword) {\r\n      alert('Insira sua senha, por favor.');\r\n      return;\r\n    }\r\n    //Show Loader\r\n    setLoading(true);\r\n    var dataToSend = {\r\n      user_name: userName,\r\n      user_email: userEmail,\r\n      user_age: userAge,\r\n      user_address: userAddress,\r\n      user_password: userPassword,\r\n    };\r\n    var formBody = [];\r\n    for (var key in dataToSend) {\r\n      var encodedKey = encodeURIComponent(key);\r\n      var encodedValue = encodeURIComponent(dataToSend[key]);\r\n      formBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n    formBody = formBody.join('&');\r\n\r\n    fetch('https://aboutreact.herokuapp.com/register.php', {\r\n      method: 'POST',\r\n      body: formBody,\r\n      headers: {\r\n        //Header Defination\r\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.log(responseJson);\r\n        // If server response message same as Data Matched\r\n        if (responseJson.status == 1) {\r\n          setIsRegistraionSuccess(true);\r\n          console.log('Registrado com sucesso, faça o login para prosseguir.');\r\n        } else {\r\n          setErrortext('Registro não sucedido.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.error(error);\r\n      });\r\n  };\r\n  if (isRegistraionSuccess) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: '#FF5554',\r\n          justifyContent: 'center',\r\n        }}>\r\n        <Image\r\n          source={require('../Image/success.png')}\r\n          style={{ height: 150, resizeMode: 'contain', alignSelf: 'center' }}\r\n        />\r\n        <Text style={styles.successTextStyle}>Registrado com sucesso.</Text>\r\n        <TouchableOpacity\r\n          style={styles.buttonStyle}\r\n          activeOpacity={0.5}\r\n          onPress={() => props.navigation.navigate('LoginScreen')}>\r\n          <Text style={styles.buttonTextStyle}>Fazer o login agora</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: '#FF5554' }}>\r\n      <Loader loading={loading} />\r\n      <ScrollView\r\n        keyboardShouldPersistTaps=\"handled\"\r\n        contentContainerStyle={{\r\n          justifyContent: 'center',\r\n          alignContent: 'center',\r\n        }}>\r\n        <View style={{ alignItems: 'center' }}>\r\n          <Image\r\n            source={require('../Image/aboutreact.png')}\r\n            style={{\r\n              width: '50%',\r\n              height: 100,\r\n              resizeMode: 'contain',\r\n              margin: 30,\r\n            }}\r\n          />\r\n        </View>\r\n        <KeyboardAvoidingView enabled>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserName) => setUserName(UserName)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Insira o nome\"\r\n              placeholderTextColor=\"#D4F1F4\"\r\n              autoCapitalize=\"sentences\"\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                emailInputRef.current && emailInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserEmail) => setUserEmail(UserEmail)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Insira o email\"\r\n              placeholderTextColor=\"#D4F1F4\"\r\n              keyboardType=\"email-address\"\r\n              ref={emailInputRef}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                passwordInputRef.current && passwordInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserPassword) =>\r\n                setUserPassword(UserPassword)\r\n              }\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Insira a senha\"\r\n              placeholderTextColor=\"#D4F1F4\"\r\n              ref={passwordInputRef}\r\n              returnKeyType=\"next\"\r\n              secureTextEntry={true}\r\n              onSubmitEditing={() =>\r\n                ageInputRef.current && ageInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserAge) => setUserAge(UserAge)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Insira a idade\"\r\n              placeholderTextColor=\"#D4F1F4\"\r\n              keyboardType=\"numeric\"\r\n              ref={ageInputRef}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                addressInputRef.current && addressInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserAddress) => setUserAddress(UserAddress)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Insira o endereço\"\r\n              placeholderTextColor=\"#D4F1F4\"\r\n              autoCapitalize=\"sentences\"\r\n              ref={addressInputRef}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={Keyboard.dismiss}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          {errortext != '' ? (\r\n            <Text style={styles.errorTextStyle}> {errortext} </Text>\r\n          ) : null}\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            activeOpacity={0.5}\r\n            onPress={handleSubmitButton}>\r\n            <Text style={styles.buttonTextStyle}>REGISTRAR</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  SectionStyle: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#0000DC',\r\n    borderWidth: 0,\r\n    color: '#FFFFFF',\r\n    borderColor: '#0000DC',\r\n    height: 40,\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonTextStyle: {\r\n    color: '#FFFFFF',\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    color: 'white',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: '#dadae8',\r\n  },\r\n  errorTextStyle: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n  successTextStyle: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}